// This file is typically generated by the Supabase CLI.
// For demonstration, here's a basic structure.
// You would run `supabase gen types typescript --project-id YOUR_PROJECT_REF --schema public > types/supabase.ts`
// to get the actual types based on your database schema.

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      users: {
        Row: {
          id: string
          name: string | null
          email: string
          primary_goal: string | null
          created_at: string
          preferences: Json | null
        }
        Insert: {
          id: string
          name?: string | null
          email: string
          primary_goal?: string | null
          created_at?: string
          preferences?: Json | null
        }
        Update: {
          id?: string
          name?: string | null
          email?: string
          primary_goal?: string | null
          created_at?: string
          preferences?: Json | null
        }
        Relationships: [
          {
            foreignKeyName: "users_id_fkey"
            columns: ["id"]
            isOneToOne: true
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      workout_logs: {
        Row: {
          id: string
          user_id: string
          date: string
          name: string
          duration_minutes: number
          exercises: Json[]
          notes: string | null
          calories_burned: number | null
          created_at: string
        }
        Insert: {
          id?: string
          user_id: string
          date: string
          name: string
          duration_minutes: number
          exercises: Json[]
          notes?: string | null
          calories_burned?: number | null
          created_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          date?: string
          name?: string
          duration_minutes?: number
          exercises?: Json[]
          notes?: string | null
          calories_burned?: number | null
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "workout_logs_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      nutrition_logs: {
        Row: {
          id: string
          user_id: string
          date: string
          meal_type: string
          food_items: Json[]
          total_calories: number
          total_protein: number
          total_carbs: number
          total_fat: number
          created_at: string
        }
        Insert: {
          id?: string
          user_id: string
          date: string
          meal_type: string
          food_items: Json[]
          total_calories: number
          total_protein: number
          total_carbs: number
          total_fat: number
          created_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          date?: string
          meal_type?: string
          food_items?: Json[]
          total_calories?: number
          total_protein?: number
          total_carbs?: number
          total_fat?: number
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "nutrition_logs_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      body_metrics: {
        Row: {
          id: string
          user_id: string
          date: string
          weight: number | null
          height: number | null
          body_fat_percentage: number | null
          muscle_mass_percentage: number | null
          waist_circumference: number | null
          notes: string | null
          created_at: string
        }
        Insert: {
          id?: string
          user_id: string
          date: string
          weight?: number | null
          height?: number | null
          body_fat_percentage?: number | null
          muscle_mass_percentage?: number | null
          waist_circumference?: number | null
          notes?: string | null
          created_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          date?: string
          weight?: number | null
          height?: number | null
          body_fat_percentage?: number | null
          muscle_mass_percentage?: number | null
          waist_circumference?: number | null
          notes?: string | null
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "body_metrics_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      mood_logs: {
        Row: {
          id: string
          user_id: string
          date: string
          mood_score: number
          notes: string | null
          created_at: string
        }
        Insert: {
          id?: string
          user_id: string
          date: string
          mood_score: number
          notes?: string | null
          created_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          date?: string
          mood_score?: number
          notes?: string | null
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "mood_logs_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      water_logs: {
        Row: {
          id: string
          user_id: string
          date: string
          amount_ml: number
          created_at: string
        }
        Insert: {
          id?: string
          user_id: string
          date: string
          amount_ml: number
          created_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          date?: string
          amount_ml?: number
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "water_logs_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      planned_workouts: {
        Row: {
          id: string
          user_id: string
          date: string
          name: string
          notes: string | null
          created_at: string
        }
        Insert: {
          id?: string
          user_id: string
          date: string
          name: string
          notes?: string | null
          created_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          date?: string
          name?: string
          notes?: string | null
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "planned_workouts_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      [_ in never]: never
    }
    Enums: {
      [_ in never]: never
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}
